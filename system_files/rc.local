#!/bin/bash
#   _____                                 _   _               _                   _ 
#  / ____|                               | | (_)             (_)                 | |
# | (___    _   _   _ __     ___   _ __  | |  _   _ __ ___    _   _ __     __ _  | |
#  \___ \  | | | | | '_ \   / _ \ | '__| | | | | | '_ ` _ \  | | | '_ \   / _` | | |
#  ____) | | |_| | | |_) | |  __/ | |    | | | | | | | | | | | | | | | | | (_| | | |
# |_____/   \__,_| | .__/   \___| |_|    |_| |_| |_| |_| |_| |_| |_| |_|  \__,_| |_|
#                  | |                                                              
#                  |_| 				  

# Copyright (c) 2016 by Scott Chase Waggener
# 
# File: /etc/rc.local
# Description: Applies changes made in Superliminal to system files
#-------------------------------------------------------------------------------------
# 
# This file is part of Superliminal.
#
# Superliminal is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Superliminal is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Superliminal.  If not, see <http://www.gnu.org/licenses/>.

# Set up variables
source /var/www/html/server_files/settings.ini &>/dev/null				#Import settings
output=/dev/tty0

# Define text colors
ANSI_COLOR_RED='\x1b[31m'
ANSI_COLOR_GREEN='\x1b[32m'
ANSI_COLOR_NORMAL="\x1B[0m"


#----------------------------------------------------------------------------------------------------------------
#						FUNCTIONS							-
#----------------------------------------------------------------------------------------------------------------

# Read settings from /var/www/html/settings.ini into other places
function readConfig {

	# Make sure nothing happened to config.txt, if so load from backup
	if ! [ -s /boot/config.txt ]; then
		cp /var/www/html/server_files/config.txt.bak /boot/config.txt
	fi

	# Write slideshow setting into slideshow.php (MAYBE DO THIS ALL IN PHP)
	sed -i "s/.*timeout.*/\t\ttimeout: ${speed}000/g" /var/www/html/slideshow.php

	# Write bootcode_delay into config.txt ( MUST BE DONE IN rc.local )
	sed -i "s/.*bootcode_delay.*/bootcode_delay=$bootcode_delay/g" /boot/config.txt

	# Get overscan values in config.txt
	overscan_config=$(cat /boot/config.txt | grep -i disable_overscan= | sed 's/disable_overscan=//g')
	overscan_x_config=$(cat /boot/config.txt | grep -i overscan_right= | sed 's/overscan_right=//g')
	overscan_y_config=$(cat /boot/config.txt | grep -i overscan_top= | sed 's/overscan_top=//g')

	echo $overscan
	echo $overscan_config
	echo $overscan_x
	echo $overscan_x_config

	# If settings.ini has different values than config.txt, update and reboot

	if [ $overscan == 'enabled' ]; then
		sed -i "s/.*disable_overscan.*/#disable_overscan=1/g" /boot/config.txt
                sed -i "s/.*overscan_left.*/overscan_left=$overscan_x/g" /boot/config.txt
                sed -i "s/.*overscan_right.*/overscan_right=$overscan_x/g" /boot/config.txt
                sed -i "s/.*overscan_top.*/overscan_top=$overscan_y/g" /boot/config.txt
                sed -i "s/.*overscan_bottom.*/overscan_bottom=$overscan_y/g" /boot/config.txt

	else
		sed -i "s/.*disable_overscan.*/disable_overscan=1/g" /boot/config.txt
		sed -i "s/.*overscan_left.*/#overscan_left=$overscan_x/g" /boot/config.txt
		sed -i "s/.*overscan_right.*/#overscan_right=$overscan_x/g" /boot/config.txt
		sed -i "s/.*overscan_top.*/#overscan_top=$overscan_y/g" /boot/config.txt
		sed -i "s/.*overscan_bottom.*/#overscan_bottom=$overscan_y/g" /boot/config.txt
	fi

	# Write hotspot settings into nmcli (MUST BE DONE IN RC.LOCAL)
	sudo nmcli con modify AP 802-11-wireless.ssid $ssid
        sudo nmcli con modify AP wifi-sec.psk $wpa_passphrase
}

# Funciton to launch flyer slideshow
function loadDisplay {
	sudo startx /boot/xinitrc &>/home/pi/xlog &
}

# Function to display OK FAILURE messages
function echo_Success	{
	printf "[  "$ANSI_COLOR_GREEN"OK"$ANSI_COLOR_NORMAL"  ] - $1"
}

function echo_Failure {
	printf "[  "$ANSI_COLOR_RED"FAILURE"$ANSI_COLOR_NORMAL"  ] - $1"
}



#----------------------------------------------------------------------------------------------------------------
#							BODY							-
#----------------------------------------------------------------------------------------------------------------

readConfig &>/dev/null						#Apply settings
loadDisplay &>/dev/null						#Start slideshow
